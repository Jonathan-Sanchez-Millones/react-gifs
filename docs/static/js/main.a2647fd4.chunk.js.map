{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","categories","type","value","onChange","target","GifGridItem","title","url","className","src","alt","getGifs","category","a","encodeURI","fetch","res","json","data","gifs","map","img","id","images","downsized_medium","GifGrid","setImages","useEffect","then","imgs","GifExpertApp","ReactDOM","render","document","getElementById"],"mappings":"2MAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAEzB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAcA,OACI,mCACI,sBAAMC,SATO,SAACC,GAElBA,EAAEC,iBACFN,GAAc,SAAAO,GAAU,OAAGL,GAAH,mBAAiBK,QAMrC,SACI,uBACIC,KAAK,OACLC,MAAOP,EACPQ,SAlBU,SAACL,GAEvBF,EAAcE,EAAEM,OAAOF,e,QCPlBG,EAAc,SAAC,GAAiB,IAAhBC,EAAe,EAAfA,MAAMC,EAAS,EAATA,IAE/B,OACI,sBAAKC,UAAU,OAAf,UACI,qBAAKC,IAAKF,EAAKG,IAAKJ,IACpB,4BAAIA,Q,uBCPHK,EAAO,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DAEbN,EAFa,0FAE6EO,UAAUF,GAFvF,uBAGDG,MAAMR,GAHL,cAGbS,EAHa,gBAIIA,EAAIC,OAJR,uBAIXC,EAJW,EAIXA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAClB,MAAO,CAEHC,GAAID,EAAIC,GACRhB,MAAOe,EAAIf,MACXC,IAAKc,EAAIE,OAAOC,iBAAiBjB,QAXtB,kBAeZY,GAfY,4CAAH,sDCIPM,EAAU,SAAC,GAAkB,IAAhBb,EAAe,EAAfA,SAEtB,EAA4BlB,mBAAS,IAArC,mBAAO6B,EAAP,KAAeG,EAAf,KAQA,OANAC,qBAAU,WACNhB,EAAQC,GACHgB,MAAK,SAAAC,GAAUH,EAAUG,QAC/B,CAACjB,IAIA,mCACI,sBAAKJ,UAAU,sBAAf,UACI,oBAAIA,UAAU,cAAd,SAA6BI,IAE7B,qBAAKJ,UAAU,YAAf,SAIQe,EAAOH,KAAI,SAAAC,GAAG,OAEV,cAAC,EAAD,eAA8BA,GAAZA,EAAIC,eCKnCQ,EA1BM,WAEjB,MAAmCpC,mBAAS,CAAC,kBAA7C,mBAAOM,EAAP,KAAkBP,EAAlB,KAEA,OAEI,qCACI,qEACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAEA,6BAGQO,EAAWoB,KAAI,SAAAR,GACX,OAAO,cAAC,EAAD,CAAwBA,SAAUA,GAApBA,YCd7CmB,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.a2647fd4.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setinputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n\r\n        setinputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n\r\n        e.preventDefault();\r\n        setCategories(categories=>[inputValue,...categories])\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <form onSubmit={handleSubmit}>\r\n                <input\r\n                    type=\"text\"\r\n                    value={inputValue}\r\n                    onChange={handleInputChange}\r\n                />\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n\r\n    setCategories: PropTypes.func.isRequired\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({title,url}) => {\r\n\r\n    return (\r\n        <div className=\"card\">\r\n            <img src={url} alt={title} />\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","export const getGifs = async ( category ) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?api_key=u63MTYky7cnvEaFzbqEn4Ardy6GuhFZD&q=${ encodeURI(category)} &limit=10`\r\n    const res = await fetch(url);\r\n    const { data } = await res.json();\r\n\r\n    const gifs = data.map(img => {\r\n        return {\r\n\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images.downsized_medium.url\r\n        }\r\n    })\r\n\r\n    return gifs;\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { GifGridItem } from './GifGridItem';\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n    const [images, setImages] = useState([]);\r\n\r\n    useEffect(() => {\r\n        getGifs(category)\r\n            .then(imgs => { setImages(imgs) })\r\n    }, [category])\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=\"card-grid-container\">\r\n                <h3 className=\"image-title\">{category}</h3>\r\n\r\n                <div className=\"card-grid\">\r\n\r\n                    {\r\n\r\n                        images.map(img => (\r\n\r\n                            <GifGridItem key={img.id} {...img} />\r\n\r\n                        ))\r\n\r\n                    }\r\n\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React, { useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nconst GifExpertApp = () => {\r\n\r\n    const [categories,setCategories] = useState(['HunterxHunter']);\r\n\r\n    return (\r\n\r\n        <>\r\n            <h2>Aplicacion de Gifs creada por Jonah</h2>\r\n            <AddCategory setCategories={setCategories}/>\r\n            <hr />\r\n\r\n            <ol>\r\n\r\n                {\r\n                    categories.map(category => {\r\n                        return <GifGrid key={category} category={category}/>\r\n                    })\r\n\r\n                }\r\n            </ol>\r\n\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GifExpertApp from './GifExpertApp';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}